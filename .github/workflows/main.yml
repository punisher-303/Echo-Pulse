name: "Build & Release"

on:
  workflow_dispatch:
    branches: main

jobs:
  build:
    name: Windows + Android Build
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup-Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          channel: 'stable'

      - name: Clone Repository
        run: git clone https://${{secrets.SECRET_KEY}}@github.com/punisher-303/ECHOPULS.git

      - name: Install Dependencies
        run: cd ECHOPULS && flutter pub get

      - name: Extract version from pubspec.yaml
        shell: powershell
        run: |
          $vLine = Select-String -Path ECHOPULS\pubspec.yaml -Pattern '^version:\s*(\S+)' | Select-Object -First 1
          if (-not $vLine) { Write-Error 'version not found in pubspec.yaml'; exit 1 }
          $ver = $vLine.Matches[0].Groups[1].Value.Split('+')[0]
          echo "VERSION=$ver" >> $env:GITHUB_ENV

      - name: Set build number
        shell: pwsh
        run: |
          $buildNumber = 2095
          Write-Host "Setting BUILDVERSION to: $buildNumber"
          "BUILDVERSION=$buildNumber" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Create keystore file
        run: |
          $b64 = "${{ secrets.KEY_STORE }}"
          $filename = "./ECHOPULS/android/Echopulse.jks"
          $bytes = [Convert]::FromBase64String($b64)
          [IO.File]::WriteAllBytes($filename, $bytes)     

      - name: Create Keystore properties
        run: |
          echo keyPassword=\${{ secrets.KEY_PASSWORD }} > ./ECHOPULS/android/key.properties
          echo storePassword=\${{ secrets.STORE_PASSWORD }} >> ./ECHOPULS/android/key.properties
          echo keyAlias=\${{ secrets.KEY_ALIAS }} >> ./ECHOPULS/android/key.properties

      - name: Build Android APKs
        shell: pwsh
        run: |
          Write-Host "Building with build number: $env:BUILDVERSION"
          cd ECHOPULS
          flutter build apk --release --split-per-abi --build-number $env:BUILDVERSION

      - name: Verify Sign
        run: |
          $buildToolsDir = Get-ChildItem "$env:ANDROID_HOME\build-tools" | Where-Object { $_.PSIsContainer } | Sort-Object Name -Descending | Select-Object -First 1
                  & "$buildToolsDir\apksigner.bat" verify ECHOPULS/build/app/outputs/flutter-apk/app-release.apk
                  & "$buildToolsDir\apksigner.bat" verify ECHOPULS/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
                  & "$buildToolsDir\apksigner.bat" verify ECHOPULS/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
                  & "$buildToolsDir\apksigner.bat" verify ECHOPULS/build/app/outputs/flutter-apk/app-x86_64-release.apk
                  
      - name: Rename Android APKs
        run: |
          Rename-Item -Path "ECHOPULS/build/app/outputs/flutter-apk/app-release.apk" -NewName "echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_universal.apk"
          Rename-Item -Path "ECHOPULS/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk" -NewName "echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_armeabi-v7a.apk"
          Rename-Item -Path "ECHOPULS/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk" -NewName "echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_arm64-v8a.apk"
          Rename-Item -Path "ECHOPULS/build/app/outputs/flutter-apk/app-x86_64-release.apk" -NewName "echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_x86_64.apk"

      - name: Build Windows App
        run: cd ECHOPULS && flutter build windows --release --build-number ${{ env.BUILDVERSION }}

      - name: Rename Windows binary
        run: Rename-Item -Path "ECHOPULS/build/windows/x64/runner/Release/EchoPulse.exe" -NewName "echopulse.exe"

      - name: ZIP Windows build
        run: Compress-Archive -Path ECHOPULS/build/windows/x64/runner/Release/* -Destination  ECHOPULS/build/windows/x64/echo_pulse_windows_x64_v${{ env.VERSION }}+${{ env.BUILDVERSION }}.zip

      - name: Upload Artifacts (Windows+Android)
        uses: actions/upload-artifact@v4
        with:
          name: Release
          path: |
            ECHOPULS/build/app/outputs/flutter-apk/echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_universal.apk
            ECHOPULS/build/windows/x64/echo_pulse_windows_x64_v${{ env.VERSION }}+${{ env.BUILDVERSION }}.zip
            ECHOPULS/build/app/outputs/flutter-apk/echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_armeabi-v7a.apk
            ECHOPULS/build/app/outputs/flutter-apk/echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_arm64-v8a.apk
            ECHOPULS/build/app/outputs/flutter-apk/echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_x86_64.apk

      - name: Create Release (Windows+Android)
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            ECHOPULS/build/windows/x64/echo_pulse_windows_x64_v${{ env.VERSION }}+${{ env.BUILDVERSION }}.zip
            ECHOPULS/build/app/outputs/flutter-apk/echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_universal.apk
            ECHOPULS/build/app/outputs/flutter-apk/echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_armeabi-v7a.apk
            ECHOPULS/build/app/outputs/flutter-apk/echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_arm64-v8a.apk
            ECHOPULS/build/app/outputs/flutter-apk/echo_pulse_android_v${{ env.VERSION }}+${{ env.BUILDVERSION }}_x86_64.apk
          tag: v${{ env.VERSION }}+${{ env.BUILDVERSION }}
          token: ${{secrets.SECRET_KEY}}
          allowUpdates: true
          omitBody: true
          prerelease: true

  linux_build:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          channel: stable

      - run: |
          sudo apt-get update -y
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y ninja-build libgtk-3-dev cmake git libmpv-dev clang

      - name: Clone Repository
        run: git clone https://${{secrets.SECRET_KEY}}@github.com/punisher-303/ECHOPULS.git

      - name: Install Dependencies
        run: cd ECHOPULS && flutter pub get

      - name: Extract version from pubspec.yaml
        run: |
          ver=$(grep -m1 -E '^version:\s*' ECHOPULS/pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          if [ -z "$ver" ]; then echo "version not found in pubspec.yaml"; exit 1; fi
          echo "VERSION=$ver" >> $GITHUB_ENV
      
      - name: Set build number
        run: echo "BUILDVERSION=2095" >> $GITHUB_ENV

      - name: Build Linux App
        run: cd ECHOPULS && flutter build linux --release --build-number $BUILDVERSION

      - name: Zip Linux App
        run: |
          cd ECHOPULS/build/linux/x64/release/bundle
          zip -r echo_pulse_linux_v${{ env.VERSION }}+${{ env.BUILDVERSION }}.zip .

      - name: Upload Artifacts (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: echo_pulse_linux
          path: ECHOPULS/build/linux/x64/release/bundle/echo_pulse_linux_v${{ env.VERSION }}+${{ env.BUILDVERSION }}.zip

      - name: Create Release (Linux)
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            ECHOPULS/build/linux/x64/release/bundle/echo_pulse_linux_v${{ env.VERSION }}+${{ env.BUILDVERSION }}.zip
          tag: v${{ env.VERSION }}+${{ env.BUILDVERSION }}
          token: ${{secrets.SECRET_KEY}}
          allowUpdates: true
          omitBody: true
          prerelease: true
